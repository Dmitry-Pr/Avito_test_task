version: '3.9'

services:
  merch-shop-service:
    build: .
    container_name: merch-shop-service
    ports:
      - "8080:8080"
    environment:
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: password
      DB_NAME: shop
      DB_HOST: db
      SERVER_ADDRESS: ":8080"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - internal

  db:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: shop
    volumes:
      - pgdata:/var/lib/postgresql/data
#      - ./migrations/:/docker-entrypoint-initdb.d/
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d shop"]
      interval: 5s
      timeout: 10s
      retries: 5
      start_period: 10s
    networks:
      - internal

  merch-shop-test:
    container_name: merch-shop-test
    environment:
      DB_PORT: 5432
      DB_USER: testuser
      DB_PASSWORD: testpassword
      DB_NAME: testdb
      DB_HOST: test_db
    build:
      context: .
      dockerfile: tests/Dockerfile
    depends_on:
      test_db:
        condition: service_healthy
    networks:
      - internal

  test_db:
    image: postgres:15
    container_name: test-db
    environment:
      POSTGRES_USER: testuser
      POSTGRES_PASSWORD: testpassword
      POSTGRES_DB: testdb
    ports:
      - "5433:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U testuser -d testdb" ]
      interval: 5s
      timeout: 10s
      retries: 5
      start_period: 10s
    networks:
      - internal

volumes:
  pgdata:

networks:
  internal:
